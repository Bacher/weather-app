{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","useEffect","a","fetch","resp","console","log","ok","json","response","getWeatherData","className","style","display","alignItems","justifyContent","flexDirection","height","fontSize","location","name","margin","current","temp_c","feelslike_c","src","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAsDeA,MAnDf,WAAgB,IAAD,EACWC,qBADX,mBACNC,EADM,KACAC,EADA,KAkBb,OAfAC,qBAAU,WAAM,4CACd,8BAAAC,EAAA,sEACqBC,MAAM,uGAD3B,UACQC,EADR,OAGEC,QAAQC,IAAI,QAASF,IAEjBA,EAAKG,GALX,iCAM2BH,EAAKI,OANhC,OAMUC,EANV,OAOIJ,QAAQC,IAAI,YAAaG,GACzBT,EAAQS,GARZ,6CADc,uBAAC,WAAD,wBAYdC,KACC,IAEEX,EASH,qBAAKY,UAAU,MAAf,SACE,sBAAKA,UAAU,uCAASC,MAAO,CAACC,QAAQ,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,cAAe,SAAUC,OAAQ,QAAjI,UACE,sBAAKL,MAAO,CAACM,SAAU,IAAvB,mBACSnB,EAAKoB,SAASC,QAEvB,sBAAKR,MAAO,CAACM,SAAU,GAAIG,OAAQ,IAAnC,8BACmB,8BAAItB,EAAKuB,QAAQC,OAAjB,YADnB,gBACgExB,EAAKuB,QAAQE,YAD7E,aAIA,sBAAKZ,MAAO,CAACC,QAAQ,OAAQC,WAAY,SAAUC,eAAgB,SAAUC,cAAe,UAA5F,UACE,qBAAKL,UAAU,QAAf,mBACA,qBAAKA,UAAU,aAAf,SACGZ,EAAKuB,QAAQC,OAAS,GACrB,qBAAKE,IAAI,wDAET,qBAAKA,IAAI,0EAtBjB,qBAAKd,UAAU,MAAf,yBCXSe,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.08945cce.chunk.js","sourcesContent":["import {useEffect, useState} from 'react';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    async function getWeatherData() {\n      const resp = await fetch('https://api.weatherapi.com/v1/current.json?key=7baecf5da5e64adb9cd191103211504&q=Vladivostok&aqi=no');\n\n      console.log('resp:', resp);\n\n      if (resp.ok) {\n        const response = await resp.json();\n        console.log('response:', response);\n        setData(response);\n      }\n    }\n    getWeatherData();\n  }, [])\n\n  if (!data) {\n    return (\n      <div className=\"App\">\n        Loading...\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"привет\" style={{display:'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column', height: '100%'}}>\n        <div style={{fontSize: 20}}>\n          City: {data.location.name}\n        </div>\n        <div style={{fontSize: 18, margin: 20}}>\n          Current weather: <b>{data.current.temp_c} °C</b>, feels like {data.current.feelslike_c} °C.\n        </div>\n\n        <div style={{display:'flex', alignItems: 'center', justifyContent: 'center', flexDirection: 'column'}}>\n          <div className='Earth'>Earth</div>\n          <div className='WeatherSun'>\n            {data.current.temp_c > 10 ?\n              <img src='https://ssl.gstatic.com/onebox/weather/48/sunny.png' />\n              :\n              <img src='https://ssl.gstatic.com/onebox/weather/48/partly_cloudy.png' />\n            }\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}